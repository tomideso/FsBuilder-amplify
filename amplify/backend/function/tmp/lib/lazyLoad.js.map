{"version":3,"sources":["lazyLoad.ts"],"names":["FsLibrary","prototype","lazyLoad","cms_selector","className","lazy","setLazy","slice","call","document","querySelectorAll","i","length","classList","contains","remove","cleanLazy","filter","elem"],"mappings":";;AAAA;;AACA;;AAEAA,qBAAUC,SAAV,CAAoBC,QAApB,GAA6B,UAASC,YAAT,EAAuBC,SAAvB,EAAgC;AACzD,MAAIC,IAAI,GAAQ,EAAhB;AACA,iCAAiB,MAAjB,EAAyBC,OAAzB;AACA,iCAAiB,MAAjB,EAAyBJ,QAAzB;AACA,iCAAiB,QAAjB,EAA2BA,QAA3B;AACA,iCAAiB,QAAjB,EAA2BA,QAA3B;;AAEA,WAAAI,OAAA,GAAA;AACED,IAAAA,IAAI,GAAG,GAAGE,KAAH,CAASC,IAAT,CACLC,QAAQ,CAACC,gBAAT,WAA6BP,YAA7B,eAA8CC,SAA9C,EADK,CAAP;AAGD;;AAED,WAAAF,QAAA,GAAA;AACE,SAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,IAAI,CAACO,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,UAAI,2BAAaN,IAAI,CAACM,CAAD,CAAjB,CAAJ,EAA2B;AACzB;AACA;AACA;AACA;AAEA,YAAIN,IAAI,CAACM,CAAD,CAAJ,CAAQE,SAAR,CAAkBC,QAAlB,CAA2BV,SAA3B,CAAJ,EAA2C;AACzCC,UAAAA,IAAI,CAACM,CAAD,CAAJ,CAAQE,SAAR,CAAkBE,MAAlB,CAAyBX,SAAzB;AACD;AACF;AACF;;AAEDY,IAAAA,SAAS;AACV;;AAED,WAAAA,SAAA,GAAA;AACE;AACAX,IAAAA,IAAI,GAAG,GAAGY,MAAH,CAAUT,IAAV,CAAeH,IAAf,EAAqB,UAACa,IAAD,EAAS;AACnC,aAAOA,IAAI,CAACL,SAAL,CAAeC,QAAf,CAAwBV,SAAxB,CAAP;AACD,KAFM,CAAP;AAGD;AACF,CApCH","file":"lazyLoad.js","sourcesContent":["import { FsLibrary } from \"./fsLibrary\";\nimport { registerListener, isInViewport } from \"./utility\";\n\nFsLibrary.prototype.lazyLoad=function(cms_selector, className) {\n    let lazy: any = [];\n    registerListener(\"load\", setLazy);\n    registerListener(\"load\", lazyLoad);\n    registerListener(\"scroll\", lazyLoad);\n    registerListener(\"resize\", lazyLoad);\n\n    function setLazy() {\n      lazy = [].slice.call(\n        document.querySelectorAll(`${cms_selector} .${className}`)\n      );\n    }\n\n    function lazyLoad() {\n      for (var i = 0; i < lazy.length; i++) {\n        if (isInViewport(lazy[i])) {\n          // if (lazy[i].getAttribute('data-src')){\n          //     lazy[i].src = lazy[i].getAttribute('data-src');\n          //     lazy[i].removeAttribute('data-src');\n          // }\n\n          if (lazy[i].classList.contains(className)) {\n            lazy[i].classList.remove(className);\n          }\n        }\n      }\n\n      cleanLazy();\n    }\n\n    function cleanLazy() {\n      // lazy = [].filter.call(lazy, function(l){ return l.getAttribute('data-src');});\n      lazy = [].filter.call(lazy, (elem) => {\n        return elem.classList.contains(className);\n      });\n    }\n  }\n"]}