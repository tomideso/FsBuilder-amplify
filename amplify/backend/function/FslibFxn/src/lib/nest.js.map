{"version":3,"sources":["nest.ts"],"names":["FsLibrary","prototype","nest","textList","nestSource","nestTarget","setNestConfig","master_collections","Array","from","document","querySelectorAll","cms_selector","sourceLinks","slice","call","forEach","collection","i","textArray","target","textElem","j","tags","textContent","replace","tagsArry","split","innerHTML","filter","link","regex","RegExp","trim","test","sort","a","b","indexOf","map","elem","outerHTML","join","config","nestConfig"],"mappings":";;AAAA;;AAEAA,qBAAUC,SAAV,CAAoBC,IAApB,GAA2B,gBAA8C;AAAA,MAAlCC,QAAkC,QAAlCA,QAAkC;AAAA,MAAxBC,UAAwB,QAAxBA,UAAwB;AAAA,MAAZC,UAAY,QAAZA,UAAY;AACvE,OAAKC,aAAL,CAAmB;AAAEH,IAAAA,QAAQ,EAARA,QAAF;AAAYC,IAAAA,UAAU,EAAVA,UAAZ;AAAwBC,IAAAA,UAAU,EAAVA;AAAxB,GAAnB;AAEA,MAAME,kBAAkB,GAAGC,KAAK,CAACC,IAAN,CACzBC,QAAQ,CAACC,gBAAT,CAA0B,KAAKC,YAA/B,CADyB,CAA3B;AAIA,MAAMC,WAAW,GAAG,GAAGC,KAAH,CAASC,IAAT,CAClBL,QAAQ,CAACC,gBAAT,CAA0BP,UAAU,GAAG,gBAAvC,CADkB,CAApB;AAIAG,EAAAA,kBAAkB,CAACS,OAAnB,CAA2B,UAACC,UAAD,EAAaC,CAAb,EAAkB;AAC3C,QAAMC,SAAS,GAAGF,UAAU,CAACN,gBAAX,CAA4BR,QAA5B,CAAlB;AAEA,QAAMiB,MAAM,GAAGH,UAAU,CAACN,gBAAX,CAA4BN,UAA5B,CAAf;AAEAc,IAAAA,SAAS,CAACH,OAAV,CAAkB,UAACK,QAAD,EAAWC,CAAX,EAAgB;AAChC,UAAID,QAAQ,IAAID,MAAM,CAACE,CAAD,CAAtB,EAA2B;AACzB,YAAIC,IAAI,GAAGF,QAAQ,CAACG,WAApB;AAEAD,QAAAA,IAAI,GAAGA,IAAI,CAACE,OAAL,CAAa,WAAb,EAA0B,GAA1B,CAAP;AACA,YAAMC,QAAQ,GAAGH,IAAI,CAACI,KAAL,CAAW,GAAX,CAAjB;AACAJ,QAAAA,IAAI,GAAG,MAAMA,IAAN,GAAa,GAApB;AAEAH,QAAAA,MAAM,CAACE,CAAD,CAAN,CAAUM,SAAV,GAAsBf,WAAW,CAC9BgB,MADmB,CACZ,UAACC,IAAD,EAAS;AACf,cAAMC,KAAK,GAAG,IAAIC,MAAJ,CAAWT,IAAX,EAAiB,IAAjB,CAAd;AACA,cAAMC,WAAW,GAAGM,IAAI,CAACN,WAAL,CAAiBS,IAAjB,EAApB;AACA,cAAMC,IAAI,GAAGH,KAAK,CAACG,IAAN,CAAWV,WAAX,CAAb;AACA,iBAAOU,IAAP;AACD,SANmB,EAOnBC,IAPmB,CAOd,UAACC,CAAD,EAAIC,CAAJ,EAAS;AACb,iBACEX,QAAQ,CAACY,OAAT,CAAiBF,CAAC,CAACZ,WAAF,CAAcS,IAAd,EAAjB,IACAP,QAAQ,CAACY,OAAT,CAAiBD,CAAC,CAACb,WAAF,CAAcS,IAAd,EAAjB,CAFF;AAID,SAZmB,EAanBM,GAbmB,CAaf,UAACC,IAAD;AAAA,iBAAUA,IAAI,CAACC,SAAf;AAAA,SAbe,EAcnBC,IAdmB,CAcd,EAdc,CAAtB;AAeD;AACF,KAxBD;AAyBD,GA9BD;AA+BD,CA1CD;;AA4CA1C,qBAAUC,SAAV,CAAoBK,aAApB,GAAoC,UAAUqC,MAAV,EAAgB;AAClD,MAAI,CAAC,KAAKC,UAAV,EAAsB;AACpB,SAAKA,UAAL,GAAkBD,MAAlB;AACD;AACF,CAJD","file":"nest.js","sourcesContent":["import { FsLibrary } from \"./fsLibrary\";\n\nFsLibrary.prototype.nest = function ({ textList, nestSource, nestTarget }) {\n  this.setNestConfig({ textList, nestSource, nestTarget });\n\n  const master_collections = Array.from(\n    document.querySelectorAll(this.cms_selector)\n  );\n\n  const sourceLinks = [].slice.call(\n    document.querySelectorAll(nestSource + \">.w-dyn-item>*\")\n  );\n\n  master_collections.forEach((collection, i) => {\n    const textArray = collection.querySelectorAll(textList);\n\n    const target = collection.querySelectorAll(nestTarget);\n\n    textArray.forEach((textElem, j) => {\n      if (textElem && target[j]) {\n        let tags = textElem.textContent;\n\n        tags = tags.replace(/\\s*,\\s*/gi, \"|\");\n        const tagsArry = tags.split(\"|\");\n        tags = \"(\" + tags + \")\";\n\n        target[j].innerHTML = sourceLinks\n          .filter((link) => {\n            const regex = new RegExp(tags, \"gi\");\n            const textContent = link.textContent.trim();\n            const test = regex.test(textContent);\n            return test;\n          })\n          .sort((a, b) => {\n            return (\n              tagsArry.indexOf(a.textContent.trim()) -\n              tagsArry.indexOf(b.textContent.trim())\n            );\n          })\n          .map((elem) => elem.outerHTML)\n          .join(\"\");\n      }\n    });\n  });\n};\n\nFsLibrary.prototype.setNestConfig = function (config) {\n  if (!this.nestConfig) {\n    this.nestConfig = config;\n  }\n};\n"]}