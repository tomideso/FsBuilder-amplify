{"version":3,"sources":["addClasses.ts"],"names":["FsLibrary","prototype","addclasses","config","classArray","frequency","start","parent","document","querySelector","cms_selector","classNames","addClassConfig","addClass","map","target","classTarget","alt","classToAdd","list","querySelectorAll","targerIsDirectChild","children","addon","replace","j","length","classList","toggle","forEach","elem","reinitializeWebflow"],"mappings":";;AAAA;;AAEAA,qBAAUC,SAAV,CAAoBC,UAApB,GAAiC,YAC8B;AAAA;;AAAA,MAA7DC,MAA6D,uEAA1C;AAAEC,IAAAA,UAAU,EAAE,EAAd;AAAkBC,IAAAA,SAAS,EAAE,CAA7B;AAAgCC,IAAAA,KAAK,EAAE;AAAvC,GAA0C;AAG7D,MAAMC,MAAM,GAAQC,QAAQ,CAACC,aAAT,CAAuB,KAAKC,YAA5B,CAApB;AAH6D,MAIrDL,SAJqD,GAIRF,MAJQ,CAIrDE,SAJqD;AAAA,MAI1CC,KAJ0C,GAIRH,MAJQ,CAI1CG,KAJ0C;AAAA,MAIvBK,UAJuB,GAIRR,MAJQ,CAInCC,UAJmC;AAM7D,OAAKQ,cAAL,GAAsBT,MAAtB;AACA,OAAKU,QAAL,GAAgB,IAAhB;;AAEA,MAAIR,SAAS,GAAG,CAAhB,EAAmB;AACjB,UAAM,sCAAN;AACD,GAFD,MAEO,IAAIC,KAAK,GAAG,CAAZ,EAAe;AACpB,UAAM,kCAAN;AACD;;AAEDK,EAAAA,UAAU,CAACG,GAAX,CAAe,gBAA6C;AAAA,QAA7BC,MAA6B,QAA1CC,WAA0C;AAAA,QAATC,GAAS,QAArBC,UAAqB;AAC1D,QAAIC,IAAI,GAAGZ,MAAM,CAACa,gBAAP,CAAwBL,MAAxB,CAAX;AACA,QAAIM,mBAAmB,GAAG,IAA1B;;AAEA,QAAId,MAAM,CAACe,QAAP,CAAgB,CAAhB,KAAsBH,IAAI,CAAC,CAAD,CAA9B,EAAmC;AACjCE,MAAAA,mBAAmB,GAAG,KAAtB;AACAF,MAAAA,IAAI,GAAGZ,MAAM,CAACe,QAAd;AACD;;AAED,QAAMC,KAAK,GAAGN,GAAG,CAACO,OAAJ,CAAY,KAAZ,EAAmB,EAAnB,CAAd;;AAEA,SAAK,IAAIC,CAAC,GAAGnB,KAAK,GAAG,CAArB,EAAwBmB,CAAC,GAAGN,IAAI,CAACO,MAAjC,EAAyCD,CAAC,IAAIpB,SAA9C,EAAyD;AACvD,UAAIgB,mBAAJ,EAAyB;AACvBF,QAAAA,IAAI,CAACM,CAAD,CAAJ,CAAQE,SAAR,CAAkBC,MAAlB,CAAyBL,KAAzB;AACD,OAFD,MAEO;AACLJ,QAAAA,IAAI,CAACM,CAAD,CAAJ,CAAQL,gBAAR,CAAyBL,MAAzB,EAAiCc,OAAjC,CAAyC,UAACC,IAAD,EAAS;AAChDA,UAAAA,IAAI,CAACH,SAAL,CAAeC,MAAf,CAAsBL,KAAtB;AACD,SAFD;AAGD;;AAED,UAAIlB,SAAS,IAAI,CAAjB,EAAoB;AAClB;AACD;;AAED,MAAA,KAAI,CAAC0B,mBAAL;AACD;AACF,GA1BD;AA2BD,CA3CD","file":"addClasses.js","sourcesContent":["import { FsLibrary } from \"./fsLibrary\";\n\nFsLibrary.prototype.addclasses = function (\n  config: AddClass = { classArray: [], frequency: 2, start: 1 }\n): void {\n    \n  const parent: any = document.querySelector(this.cms_selector);\n  const { frequency, start, classArray: classNames } = config;\n\n  this.addClassConfig = config;\n  this.addClass = true;\n\n  if (frequency < 0) {\n    throw \"unaccepted value passed as frequency\";\n  } else if (start < 1) {\n    throw \"unaccepted value passed as start\";\n  }\n\n  classNames.map(({ classTarget: target, classToAdd: alt }) => {\n    let list = parent.querySelectorAll(target);\n    let targerIsDirectChild = true;\n\n    if (parent.children[0] != list[0]) {\n      targerIsDirectChild = false;\n      list = parent.children;\n    }\n\n    const addon = alt.replace(/\\./g, \"\");\n\n    for (let j = start - 1; j < list.length; j += frequency) {\n      if (targerIsDirectChild) {\n        list[j].classList.toggle(addon);\n      } else {\n        list[j].querySelectorAll(target).forEach((elem) => {\n          elem.classList.toggle(addon);\n        });\n      }\n\n      if (frequency == 0) {\n        break;\n      }\n\n      this.reinitializeWebflow();\n    }\n  });\n};\n\ninterface AddClass {\n  classArray: Array<AltClass>; //list of classnames you want to add\n  frequency: number; //The frequency or order of addition of class to the list\n  start: number; //position of list item to start with\n}\n\ninterface AltClass {\n  classTarget: string;\n  classToAdd: string;\n}\n"]}